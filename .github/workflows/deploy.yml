on:
  push:
    branches:
      - main
name: deploy pipeline
jobs:
  avoid_redunday:
    runs-on: ubuntu-18.04
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}
  lint:
    runs-on: ubuntu-18.04
    steps:
      - name: Notify slack success
        if: success()
        id: slack # IMPORTANT: reference this step ID value in future Slack steps
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel: app-alerts
          status: STARTING
          color: warning

      - name: Checkout project
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Cache Dependencies
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 14
      - name: Install dependencies
        run: |
          yarn install --frozen-lockfile
      - name: lint
        run: npm run lint
  sonarcloud:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  build:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout project
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Cache Dependencies
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 14
      - name: Install dependencies
        run: |
          yarn install --frozen-lockfile
      - name: Build
        run: |
          npm run build
      - name: upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: .next
          path: .next
  success-pre-build:
    needs: [lint,sonarcloud,build]
    runs-on: ubuntu-18.04
    steps: 
      - name: Notify slack success
        if: success()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          # Updates existing message from the first step
          message_id: ${{ steps.slack.outputs.message_id }}
          channel: app-alerts
          status: SUCCESS
          color: good
  tests:
    needs: [lint,sonarcloud,build]
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout project
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Cache Dependencies
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 14
      - name: Install dependencies
        run: |
          yarn install --frozen-lockfile
      - name: download artifact
        uses: actions/download-artifact@v2
        with:
          name: .next
          path: .next
      - name: test
        run: |
          npm run test
  deploy:
    needs: [tests]
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout project
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Cache Dependencies
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 14
      - name: Build
        run: |
          yarn install --frozen-lockfile
      - name: Deploy
        uses: amondnet/vercel-action@v20
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.ORG_ID }}
          vercel-project-id: ${{ secrets.PROJECT_ID }}
          vercel-args: '--prod'
          scope: ${{ secrets.ORG_ID }}