on:
  push:
    branches:
      - main
name: deploy pipeline
jobs:
  avoid_redunday:
    runs-on: ubuntu-18.04
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}
      - name: Post to a Slack channel
        id: slack
        uses: slackapi/slack-github-action@v1.21.0
        with:
          channel-id: 'C03SAP8QR4L'
          payload: |
            {
              "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
                  }
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      - uses: act10ns/slack@v1
        with:
          status: starting
          channel: '#ci-cd'
          message: Starting Deployment
        if: always()
  lint:
    runs-on: ubuntu-18.04
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    steps:
      - name: Checkout project
        id: linter
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Cache Dependencies
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 14
      - name: Install dependencies
        run: |
          yarn install --frozen-lockfile
      - name: lint
        run: npm run lint
      - uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          channel: '#ci-cd'
        if: always()
  sonarcloud:
    runs-on: ubuntu-latest
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    steps:
    - uses: actions/checkout@v2
      id: sonarcloud
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    - uses: act10ns/slack@v1
      with:
        status: ${{ job.status }}
        steps: ${{ toJson(steps) }}
        channel: '#ci-cd'
      if: always()
  build:
    runs-on: ubuntu-18.04
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    steps:
      - name: Checkout project
        id: build
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Cache Dependencies
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 14
      - name: Install dependencies
        run: |
          yarn install --frozen-lockfile
      - name: Build
        run: |
          npm run build
      - name: upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: .next
          path: .next
      - uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          channel: '#ci-cd'
        if: always()
  tests:
    needs: [lint,sonarcloud,build]
    runs-on: ubuntu-18.04
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    steps:
      - name: Checkout project
        id: tests
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Cache Dependencies
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 14
      - name: Install dependencies
        run: |
          yarn install --frozen-lockfile
      - name: download artifact
        uses: actions/download-artifact@v2
        with:
          name: .next
          path: .next
      - name: test
        run: |
          npm run test
      - uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          channel: '#ci-cd'
        if: always()
  deploy:
    needs: [tests]
    runs-on: ubuntu-18.04
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    steps:
      - name: Checkout project
        id: deploy
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Cache Dependencies
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 14
      - name: Build
        run: |
          yarn install --frozen-lockfile
      - name: Deploy
        uses: amondnet/vercel-action@v20
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.ORG_ID }}
          vercel-project-id: ${{ secrets.PROJECT_ID }}
          vercel-args: '--prod'
          scope: ${{ secrets.ORG_ID }}
      - uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          channel: '#ci-cd'
        if: always()
